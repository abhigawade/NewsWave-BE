openapi: 3.0.3
info:
  title: NewsWave API Documentation
  version: 1.0.0
  description: API documentation for NewsWave project.
paths:
  /article/article/:
    get:
      operationId: article_article_list
      tags:
      - article
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
          description: ''
    post:
      operationId: article_article_create
      tags:
      - article
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Article'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
  /article/article/{id}/:
    get:
      operationId: article_article_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - article
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    put:
      operationId: article_article_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - article
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Article'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    patch:
      operationId: article_article_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - article
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedArticle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedArticle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedArticle'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
    delete:
      operationId: article_article_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - article
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /article/download/{id}/:
    get:
      operationId: article_download_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - article
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /article/summary/{id}/:
    get:
      operationId: article_summary_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - article
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /article/translate/{id}/:
    get:
      operationId: article_translate_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - article
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /authentication/change-password/:
    put:
      operationId: authentication_change_password_update
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChangePassword'
          description: ''
  /authentication/login/:
    post:
      operationId: authentication_login_create
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /authentication/logout/:
    post:
      operationId: authentication_logout_create
      tags:
      - authentication
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /authentication/profile/:
    get:
      operationId: authentication_profile_retrieve
      tags:
      - authentication
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: authentication_profile_partial_update
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /authentication/register/:
    post:
      operationId: authentication_register_create
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /savedArticle/saved-articles/:
    get:
      operationId: savedArticle_saved_articles_list
      tags:
      - savedArticle
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedArticle'
          description: ''
    post:
      operationId: savedArticle_saved_articles_create
      tags:
      - savedArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedArticle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavedArticle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavedArticle'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedArticle'
          description: ''
  /savedArticle/saved-articles/{id}/:
    put:
      operationId: savedArticle_saved_articles_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - savedArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedArticle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SavedArticle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SavedArticle'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedArticle'
          description: ''
    patch:
      operationId: savedArticle_saved_articles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - savedArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSavedArticle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSavedArticle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSavedArticle'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedArticle'
          description: ''
    delete:
      operationId: savedArticle_saved_articles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - savedArticle
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /userPreference/userPreference/:
    get:
      operationId: userPreference_userPreference_retrieve
      tags:
      - userPreference
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    post:
      operationId: userPreference_userPreference_create
      tags:
      - userPreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPreference'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    patch:
      operationId: userPreference_userPreference_partial_update
      tags:
      - userPreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source:
          type: string
          nullable: true
        author:
          type: string
          nullable: true
        title:
          type: string
        description:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          maxLength: 200
        url_to_image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        published_at:
          type: string
          format: date-time
        content:
          type: string
          nullable: true
        categories:
          nullable: true
      required:
      - id
      - published_at
      - title
      - url
    PatchedArticle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source:
          type: string
          nullable: true
        author:
          type: string
          nullable: true
        title:
          type: string
        description:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          maxLength: 200
        url_to_image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        published_at:
          type: string
          format: date-time
        content:
          type: string
          nullable: true
        categories:
          nullable: true
    PatchedSavedArticle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        article:
          allOf:
          - $ref: '#/components/schemas/Article'
          readOnly: true
        saved_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUserPreference:
      type: object
      properties:
        user:
          type: integer
          readOnly: true
        preferred_topics: {}
        preferred_sources: {}
    PatchedUserProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    SavedArticle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        article:
          allOf:
          - $ref: '#/components/schemas/Article'
          readOnly: true
        saved_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - article
      - id
      - saved_at
      - user
    UserChangePassword:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - old_password
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          maxLength: 128
      required:
      - email
      - password
    UserPreference:
      type: object
      properties:
        user:
          type: integer
          readOnly: true
        preferred_topics: {}
        preferred_sources: {}
      required:
      - user
    UserProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
    UserRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - email
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
